- const dataListItems = [{"pathFile":"1-Essentials/custom-tags/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Вы можете легко определить свои собственные теги / компоненты ( tag/component ) так же просто, как создавать классы. Они похожи на компоненты в React. Теги определяются с использованием ключевого слова tag:"},{"pathFile":"1-Essentials/event-handling/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Мы можем использовать <code>&lt;tag :имя-события=обработчик&gt;</code> ( <code>&lt;tag :eventname=handler&gt;</code> ), чтобы прослушивать события DOM и выполнять код при их возникновении."},{"pathFile":"1-Essentials/examples/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Вся веб-сайт написан на Imba. Он использует один и тот же код как для сервера, так и для клиента. После первоначальной загрузки, навигация в браузере происходит с использованием истории (push/popState) и отрисовывается непосредственно на клиенте. Однако, при жестком обновлении страницы, веб-сайт будет отображаться с сервера, что позволяет оказаться на той же странице. Это достигается благодаря использованию одинаковой логики для маршрутизации. Вы можете найти код на <a href=\"https://github.com/somebee/imba.io\">GitHub</a>."},{"pathFile":"1-Essentials/form-input-bindings/","urlCss":"../../github.css","urlJs":"../../index.js","description":"1>Поля Input в формах</h1>\n<h2>Основное использование</h2>\n<h3>Text</h3>\n<pre><code class=\"language-imba\">var store = {message: &quot;&quot;}\nImba.mount &lt;section -&gt;\n    &lt;input[store:message]&gt;\n    &lt;div&gt; &quot;Message is {store:message}&quot;\n</code></pre>\n<h3>Range</h3>\n<pre><code class=\"language-imba\">var data = {counter: 50}\nImba.mount &lt;div -&gt;\n    &lt;input[data:counter] type='range' min=0 max=100 step=1&gt;\n    &lt;div&gt; &quot;Count is {data:counter}&quot;\n</code></pre>\n<h3>Checkbox</h3>\n<pre><code class=\"language-imba\">var store = {\n    message: &quot;&quot;\n    enabled: false\n}\nImba.mount &lt;div.grid -&gt;\n    &lt;input[store:enabled] type='checkbox'&gt;\n    &lt;span&gt; &quot;enabled: {store:enabled}&quot;\n</code></pre>\n<h3>Multiple checkboxes</h3>\n<pre><code class=\"language-imba\">var data = {skills: [&quot;Literacy&quot;]}\nImba.mount &lt;div -&gt;\n    &lt;header.bar&gt; for option in ['React','Vue','Imba','Angular','Ember']\n        &lt;label.pill&gt;\n            &lt;input[data:skills] type='checkbox' value=option&gt;\n            &lt;span&gt; option\n    &lt;div&gt; &quot;Your skills: {data:skills.join(&quot;, &quot;)}&quot;\n</code></pre>\n<h3>Select &amp; Radio</h3>\n<pre><code class=\"language-imba\">var options = ['React','Vue','Imba','Angular','Ember']\nvar data = {choice: null}\n\nImba.mount &lt;div -&gt;\n    # binding select to choice\n    &lt;select[data:choice]&gt; for item in options\n        &lt;option&gt; item\n\n    # render an input radio for every option\n    &lt;header.bar&gt; for item in options\n        &lt;label.pill&gt;\n            &lt;input[data:choice] type='radio' value=item&gt;\n            &lt;span&gt; item\n</code></pre>\n<h3>Rich values</h3>\n<pre><code class=\"language-imba\">\nvar options = [\n    { name: 'React', url: &quot;reactjs.org&quot; }\n    { name: 'Vue', url: &quot;vuejs.org&quot; }\n    { name: 'Imba', url: &quot;imba.io&quot; }\n    { name: 'Angular', url: &quot;angular.io&quot; }\n]\n\nvar data = {choice: &quot;&quot;}\n\nImba.mount &lt;div -&gt;\n    # binding select to rich objects\n    &lt;select[data:choice]&gt;\n        &lt;option disabled value=&quot;&quot;&gt; &quot;Please select one&quot;\n        for item in options\n            &lt;option value=item&gt; item:name\n\n    if let framework = data:choice\n        &lt;div&gt;\n            &lt;h2&gt; &quot;Framework of choice:&quot;\n            &lt;div&gt; &quot;{framework:name} ({framework:url})&quot;\n</code></pre>\n<h3>Пример</h3>\n<pre><code class=\"language-imba\">\nvar store =\n    people: [{\n        name: &quot;&quot;\n        skills: [&quot;Curiosity&quot;,&quot;Literacy&quot;]\n        confirmed: false\n    }]\n\ntag Form &lt; form    \n    prop confirmed\n    prop person\n\n    def addSkill e\n        person:skills.push(e.target.value)\n        e.target.value = ''\n\n    def onsubmit e\n        e.prevent\n        window.alert(&quot;Submitted!&quot;)\n\n    def render\n        &lt;self&gt;\n            &lt;input[person:name] type='text' placeholder=&quot;Your name...&quot;&gt;\n            &lt;input placeholder=&quot;Add skill...&quot; :keyup.enter.prevent.addSkill&gt;\n            &lt;div.bar&gt; for skill in person:skills\n                &lt;label.pill&gt;\n                    &lt;input[person:skills] type='checkbox' value=skill&gt;\n                    &lt;span&gt; skill\n            &lt;footer&gt;\n                &lt;label.pill&gt;\n                    &lt;input[confirmed] type='checkbox'&gt;\n                    &lt;span&gt; &quot;I, {person:name or &quot;Unnamed&quot;}, confirm this&quot;\n                &lt;button disabled=!confirmed&gt; &quot;Submit Form&quot;\n\nImba.mount &lt;Form person=store:people[0]&gt;\n</code></pre>"},{"pathFile":"1-Essentials/introduction/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Imba - это новый язык программирования для веба, который компилируется в производительный JavaScript. Он сильно вдохновлен Ruby и Python, но разработан явно для веб-программирования (как на сервере, так и на клиенте). Imba относится к элементам DOM как к полноценным объектам. Эти элементы компилируются в <a href=\"/guides/advanced/performance\">встроенный DOM</a>, который <a href=\"https://somebee.github.io/dom-reconciler-bench/index.html\">в разы быстрее</a> современных виртуальных DOM-реализаций. Мы искренне верим, что это открывает новый путь в разработке веб-приложений."},{"pathFile":"1-Essentials/rendering/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Хотя синтаксис и семантика Imba больше связаны с Ruby, чем с JavaScript, он компилируется в чистый и производительный JavaScript и полностью совместим с любой существующей JavaScript-библиотекой. Imba поставляется с небольшим набором среды выполнения для пользовательских тегов и утилит, но не расширяет нативные типы JavaScript. Массивы остаются массивами, строки - строками, числа - числами, классы - конструкторами с прототипами и так далее. Если вам просто нравится Imba больше, нет никакой причины не писать свой пакет npm на Imba, даже если он предназначен для использования в общей JavaScript-экосистеме. На самом деле, Imba генерирует <em>очень</em> читаемый JavaScript, сохраняя отступы, комментарии и стиль кодирования."},{"pathFile":"1-Essentials/state-management/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Большинство фреймворков для разработки веб-приложений стремятся хорошо решать одну задачу: обновлять представления автоматически при изменении базовых данных."},{"pathFile":"1-Essentials/tag-syntax/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Вышеуказанное объявление может показаться странным на первый взгляд. В Imba элементы DOM являются полноценными объектами. Мы создаем <em>реальный</em> DOM-элемент с классом &quot;main&quot; и текстом &quot;Hello&quot;."},{"title":"Custom Tags","order":4,"pathFile":"1-essentials/custom-tags/","urlCss":"../../github.css","urlJs":"../../index.js","description":"You can easily define your own tags / components, as easily as creating classes. They are similar to components in react. Tags are defined with the <code>tag</code> keyword:"},{"title":"Event Handling","order":5,"pathFile":"1-essentials/event-handling/","urlCss":"../../github.css","urlJs":"../../index.js","description":"We can use <code>&lt;tag :eventname=handler&gt;</code> to listen to DOM events and run code when they’re triggered."},{"title":"Examples","order":8,"pathFile":"1-essentials/examples/","urlCss":"../../github.css","urlJs":"../../index.js","description":"This whole website is written in Imba. It uses the same code for server and client. After the initial load, all navigation in the browser is happening with history push/popState, and rendered directly on the client, yet any hard refresh should land you at the same spot when rendered from the server, thanks to using the same logic for routing as well. Grab it over at <a href=\"https://github.com/somebee/imba.io\">GitHub</a>."},{"title":"Form Input Bindings","order":6,"pathFile":"1-essentials/form-input-bindings/","urlCss":"../../github.css","urlJs":"../../index.js","description":"1>Form Input Bindings</h1>\n<h2>Basic Usage</h2>\n<h3>Text</h3>\n<pre><code class=\"language-imba\">var store = {message: &quot;&quot;}\nImba.mount &lt;section -&gt;\n    &lt;input[store:message]&gt;\n    &lt;div&gt; &quot;Message is {store:message}&quot;\n</code></pre>\n<h3>Range</h3>\n<pre><code class=\"language-imba\">var data = {counter: 50}\nImba.mount &lt;div -&gt;\n    &lt;input[data:counter] type='range' min=0 max=100 step=1&gt;\n    &lt;div&gt; &quot;Count is {data:counter}&quot;\n</code></pre>\n<h3>Checkbox</h3>\n<pre><code class=\"language-imba\">var store = {\n    message: &quot;&quot;\n    enabled: false\n}\nImba.mount &lt;div.grid -&gt;\n    &lt;input[store:enabled] type='checkbox'&gt;\n    &lt;span&gt; &quot;enabled: {store:enabled}&quot;\n</code></pre>\n<h3>Multiple checkboxes</h3>\n<pre><code class=\"language-imba\">var data = {skills: [&quot;Literacy&quot;]}\nImba.mount &lt;div -&gt;\n    &lt;header.bar&gt; for option in ['React','Vue','Imba','Angular','Ember']\n        &lt;label.pill&gt;\n            &lt;input[data:skills] type='checkbox' value=option&gt;\n            &lt;span&gt; option\n    &lt;div&gt; &quot;Your skills: {data:skills.join(&quot;, &quot;)}&quot;\n</code></pre>\n<h3>Select &amp; Radio</h3>\n<pre><code class=\"language-imba\">var options = ['React','Vue','Imba','Angular','Ember']\nvar data = {choice: null}\n\nImba.mount &lt;div -&gt;\n    # binding select to choice\n    &lt;select[data:choice]&gt; for item in options\n        &lt;option&gt; item\n\n    # render an input radio for every option\n    &lt;header.bar&gt; for item in options\n        &lt;label.pill&gt;\n            &lt;input[data:choice] type='radio' value=item&gt;\n            &lt;span&gt; item\n</code></pre>\n<h3>Rich values</h3>\n<pre><code class=\"language-imba\">\nvar options = [\n    { name: 'React', url: &quot;reactjs.org&quot; }\n    { name: 'Vue', url: &quot;vuejs.org&quot; }\n    { name: 'Imba', url: &quot;imba.io&quot; }\n    { name: 'Angular', url: &quot;angular.io&quot; }\n]\n\nvar data = {choice: &quot;&quot;}\n\nImba.mount &lt;div -&gt;\n    # binding select to rich objects\n    &lt;select[data:choice]&gt;\n        &lt;option disabled value=&quot;&quot;&gt; &quot;Please select one&quot;\n        for item in options\n            &lt;option value=item&gt; item:name\n\n    if let framework = data:choice\n        &lt;div&gt;\n            &lt;h2&gt; &quot;Framework of choice:&quot;\n            &lt;div&gt; &quot;{framework:name} ({framework:url})&quot;\n</code></pre>\n<h3>Example</h3>\n<pre><code class=\"language-imba\">\nvar store =\n    people: [{\n        name: &quot;&quot;\n        skills: [&quot;Curiosity&quot;,&quot;Literacy&quot;]\n        confirmed: false\n    }]\n\ntag Form &lt; form    \n    prop confirmed\n    prop person\n\n    def addSkill e\n        person:skills.push(e.target.value)\n        e.target.value = ''\n\n    def onsubmit e\n        e.prevent\n        window.alert(&quot;Submitted!&quot;)\n\n    def render\n        &lt;self&gt;\n            &lt;input[person:name] type='text' placeholder=&quot;Your name...&quot;&gt;\n            &lt;input placeholder=&quot;Add skill...&quot; :keyup.enter.prevent.addSkill&gt;\n            &lt;div.bar&gt; for skill in person:skills\n                &lt;label.pill&gt;\n                    &lt;input[person:skills] type='checkbox' value=skill&gt;\n                    &lt;span&gt; skill\n            &lt;footer&gt;\n                &lt;label.pill&gt;\n                    &lt;input[confirmed] type='checkbox'&gt;\n                    &lt;span&gt; &quot;I, {person:name or &quot;Unnamed&quot;}, confirm this&quot;\n                &lt;button disabled=!confirmed&gt; &quot;Submit Form&quot;\n\nImba.mount &lt;Form person=store:people[0]&gt;\n</code></pre>"},{"title":"Introduction","order":1,"pathFile":"1-essentials/introduction/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Imba is a new programming language for the web that compiles\nto performant JavaScript. It is heavily inspired by ruby and python,\nbut developed explicitly for web programming (both server and client).\nImba treats DOM elements as a first-class citizens. These elements are compiled to an <a href=\"/guides/advanced/performance\">inline dom</a>, which is an <a href=\"https://somebee.github.io/dom-reconciler-bench/index.html\">order of magnitude faster</a> than todays virtual dom implementations. We truly believe that it opens up for a new way of developing web applications."},{"title":"Rendering","order":3,"pathFile":"1-essentials/rendering/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Even though the syntax and semantics of Imba is much more related to Ruby than JavaScript, it does compile down to plain performant JavaScript, and is fully compatible with any existing JavaScript library. Imba ships with a rather small runtime for custom tags and utilities, but do not extend any native types from JavaScript. Arrays are arrays, strings are strings, numbers are numbers, classes are constructors with prototypes and so forth. If you simply like Imba better, there is no reason not to write your npm package in Imba, even if it is supposed to be used in the general JavaScript ecosystem. In fact, Imba produces <em>very</em> readable JavaScript, by keeping your indentation, comments, and coding style."},{"title":"State Management","order":7,"pathFile":"1-essentials/state-management/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Most frameworks for developing web applications try to solve one thing well; update views automatically when the underlying data changes."},{"title":"Tag Syntax","order":2,"pathFile":"1-essentials/tag-syntax/","urlCss":"../../github.css","urlJs":"../../index.js","description":"The above declaration might look strange at first. DOM elements are first-class citizens in Imba. We are creating a <em>real</em> dom element, with the className &quot;main&quot; and textContent &quot;Hello&quot;."},{"pathFile":"2-Language/basics/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Несмотря на то, что синтаксис и семантика Imba более связаны с Ruby, чем с JavaScript, он компилируется в обычный и производительный JavaScript и полностью совместим с любой существующей JavaScript-библиотекой. Imba не расширяет ни один из встроенных типов JavaScript. Массивы - это массивы, строки - строки, числа - числа, классы - конструкторы с прототипами и так далее. Если вам просто нравится Imba больше, нет никакой причины не писать свой пакет npm на Imba, даже если он предназначен для использования в общей экосистеме JavaScript. Фактически, Imba генерирует <em>очень</em> читаемый JavaScript, сохраняя форматирование, комментарии и стиль кодирования."},{"pathFile":"2-Language/caveats/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Если вы приходите из мира JavaScript, вам необходимо узнать несколько вещей, когда изучаете Imba. Imba не похож на CoffeeScript, в том смысле, что он не пытается быть всего лишь немного отличающимся диалектом JavaScript. Imba компилируется в JavaScript, но синтаксис и семантика Imba влияют на структуру вашего кода."},{"pathFile":"2-Language/classes/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Для создания экземпляров классов в Imba вы используете метод new, например Array.new, в отличие от специального синтаксиса new Array() в JavaScript. Это не специфично для классов, созданных в Imba, но используется для создания любых объектов, будь то встроенные конструкторы в JavaScript, такие как Array, Object, RegExp, а также классы/конструкторы других языков программирования."},{"pathFile":"2-Language/functions/","urlCss":"../../github.css","urlJs":"../../index.js","description":"В Imba есть два типа функций: <em>методы</em> и <em>блоки</em>. Imba автоматически возвращает последнее выражение из функции."},{"pathFile":"2-Language/loops/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Циклы в Imba ведут себя аналогично генераторам массивов в CoffeeScript и Python. Они являются выражениями и могут быть возвращены и назначены. Когда они используются как выражения, они всегда возвращают массив (подобно методу Array#map, но с несколькими дополнительными мощными возможностями, такими как break / continue)."},{"pathFile":"2-Language/modules/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Команда require работает точно так же, как и в чистом JavaScript."},{"pathFile":"2-Language/more/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Imba поддерживает ключевое слово await, которое компилируется напрямую в async/await в JavaScript. Единственная разница заключается в том, что вам не нужно помечать ваши функции как async. Любая функция, содержащая оператор await, автоматически будет скомпилирована в асинхронную функцию."},{"pathFile":"2-Language/switch/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Вы можете использовать операторы switch в Imba двумя способами:"},{"pathFile":"2-Language/tags/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Несмотря на то, что теги являются простыми обертками вокруг нативных элементов DOM, они имеют некоторую функциональность, которую стоит знать. Если вы хотите работать с элементом DOM напрямую, вы всегда можете получить доступ к нему через tag.dom. Элемент DOM также содержит ссылку на свою обертку Imba.Tag через domElement:_tag."},{"title":"Caveats","order":2,"pathFile":"2-language/caveats/","urlCss":"../../github.css","urlJs":"../../index.js","description":"If you are coming from JavaScript, there are a few things you really need to know when learning Imba. Imba is not like CoffeeScript, in the sense that it does not try to just be a slightly different dialect of JavaScript. Imba compiles to javascript, but the syntax and semantics affects how you structure your code."},{"title":"Tags","order":6,"pathFile":"2-language/tags/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Even though tags are just very thin wrappers around native DOM elements, they do have some functionality that is worth knowing. If you want to deal with the DOM element directly, you can always access that through <code>tag.dom</code>. The DOM element also has a reference to its Imba.Tag wrapper, through <code>domElement:_tag</code>"},{"pathFile":"3-Miscellaneous/Advanced/development/","urlCss":"../../../github.css","urlJs":"../../../index.js","description":"Компилятор Imba написан на самом языке Imba, с использованием измененной версии генератора парсера <a href=\"https://github.com/zaach/jison\">Jison</a>. Командная строка imba доступна как утилита Node.js. Сам компилятор не зависит от Node и может быть запущен в любой среде JavaScript или в браузере."},{"pathFile":"3-Miscellaneous/Advanced/performance/","urlCss":"../../../github.css","urlJs":"../../../index.js","description":"Виртуальный DOM был фантастическим инновационным решением. Благодаря процессу обновления/заплатки DOM для отражения изменений состояния, стало возможным писать представления (виды) в декларативном стиле. Благодаря этому процесс обновления DOM значительно ускорился."},{"pathFile":"3-Miscellaneous/Advanced/release/","urlCss":"../../../github.css","urlJs":"../../../index.js","description":"There is currently no official release schedule for the Imba project. If a critical bug has been found\nthat will warrant a new release, but this will likely change with a formal release schedule when development\nactivity is back up."},{"pathFile":"3-Miscellaneous/Advanced/routing/","urlCss":"../../../github.css","urlJs":"../../../index.js","description":"Для большинства одностраничных приложений рекомендуется использовать библиотеку <a href=\"https://github.com/somebee/imba-router\">imba-router</a>. Посмотрите эту <a href=\"https://scrimba.com/playlist/pMvYcg\">6-частную интерактивную видеозапись</a> для получения дополнительной информации."},{"pathFile":"3-Miscellaneous/Scheduler/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Пометьте планировщик для выполнения на следующем кадре. Это асинхронная операция, поэтому вы можете вызывать ее тысячу раз во время одного &quot;такта&quot; в вашем приложении, и она будет выполняться только один раз в следующем такте. Это полезно, если вы хотите убедиться, что некоторый тег рендерится асинхронно как можно скорее."},{"pathFile":"3-Miscellaneous/Tag/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Хотя теги являются всего лишь тонкими оболочками над нативными элементами DOM, они имеют некоторую функциональность, которую стоит знать. Если вы хотите работать с элементом DOM напрямую, вы всегда можете получить к нему доступ через tag.dom."},{"pathFile":"3-Miscellaneous/Tooling/plugins/","urlCss":"../../../github.css","urlJs":"../../../index.js","description":"Please note that these plugins might have varying degrees of quality and are not maintained by the Imba project."},{"pathFile":"3-Miscellaneous/Tooling/tools/","urlCss":"../../../github.css","urlJs":"../../../index.js","description":"Imba поставляется с тремя исполняемыми файлами (бинарными файлами): imba, imbapack и imbac."},{"pathFile":"3-Miscellaneous/Touch/","urlCss":"../../github.css","urlJs":"../../index.js","description":"Объединяет события мыши и касания (Touch Events). Объекты касания (Touch objects) сохраняются на протяжении всего касания, от touchstart до завершения/отмены. Когда касание начинается, оно проходит вниз от самой внутренней цели (target) до тех пор, пока не найдет узел, отвечающий на событие ontouchstart. Если касание явно не перенаправляется, оно вызывает события ontouchmove и ontouchend / ontouchcancel на реагирующем узле (responder) в соответствующих случаях."},{"pathFile":"community/","urlCss":"../github.css","urlJs":"../index.js","description":"The Imba community is on multiple channels:"},{"type":"snippet","pathFile":"hero/","urlCss":"../github.css","urlJs":"../index.js","description":"re><code class=\"language-imba\">Imba.mount &lt;nav#hero -&gt;\n    &lt;a href='/guides'&gt; &quot;Начнём&quot;\n    &lt;a.github href=linkToGitHub&gt; &quot;GitHub&quot;\n</code></pre>"},{"pathFile":"scrimba/","urlCss":"../github.css","urlJs":"../index.js","description":"The interactive screencasting platform <a href=\"https://scrimba.com\">Scrimba.com</a> is written in Imba, both frontend and backend."},{"pathFile":"welcome/","urlCss":"../github.css","urlJs":"../index.js","description":"Imba родился, чтобы снова сделать разработку веб-приложений увлекательной. Он имеет чистый и читаемый синтаксис, вдохновленный Ruby, компилируется в читаемый и производительный JavaScript и работает в рамках существующей экосистемы."}]